{
	"info": {
		"_postman_id": "d6161821-76a9-466f-b6ad-6e8573e92dce",
		"name": "Workflow Github API and twilio  with an api token",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Trigger OTP Code",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "d9f75b18-6ea7-4c6d-a32f-a4f7063b414b",
						"exec": [
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "183fece7-fe13-4781-a9df-acb1768ffe1b",
						"exec": [
							"pm.test(\"Status code is 401\", function () {",
							"    pm.response.to.have.status(401, '401 Expected while trigerring an OTP Code');",
							"});",
							"",
							"setTimeout(function(){",
							"    postman.setNextRequest(\"Get the Github Message from twilio\");",
							"}, 10000);",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{GitHub_Pwd}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{GitHub_User}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/vnd.github.v3+json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"scopes\": [\"public_repo\"],\r\n     \"note\": \"test\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://api.github.com/authorizations",
					"protocol": "https",
					"host": [
						"api",
						"github",
						"com"
					],
					"path": [
						"authorizations"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get the Github Message from twilio",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "1dc73361-5779-4060-a314-8d793ddd6b4f",
						"exec": [
							"pm.environment.set(\"twilio_SID\", \"\");",
							"pm.environment.set(\"twilio_SECRET\", \"\");"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "196cd66b-f1a9-4b45-93a9-cb2dfd20f918",
						"exec": [
							"var jsonData = pm.response.json();",
							"const otp = jsonData.messages[0].body.substring(0,6);",
							"pm.environment.set(\"OTP\", otp);",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200,\"200 Expected while receiving OTP from twilio\");",
							"});",
							"postman.setNextRequest(\"Get Github repositories\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{AUTH_TOKEN}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{twilio_account}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://api.twilio.com/2010-04-01/Accounts/:account/Messages.json",
					"protocol": "https",
					"host": [
						"api",
						"twilio",
						"com"
					],
					"path": [
						"2010-04-01",
						"Accounts",
						":account",
						"Messages.json"
					],
					"query": [
						{
							"key": "",
							"value": "",
							"disabled": true
						}
					],
					"variable": [
						{
							"key": "account",
							"value": "{{twilio_account}}",
							"type": "string"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Github repositories",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "1ae8ed2c-f864-426a-9cbc-d5912dcc5511",
						"exec": [
							"",
							"pm.test(\"The expected status code is 200\", function () {",
							"    pm.response.to.have.status(200,\"While getting repositories status 200 expected\");",
							"});",
							"",
							"postman.setNextRequest(\"Create a Git Repository\");",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "d4f0af79-a96f-46ee-a53a-60eb05850ddf",
						"exec": [
							"pm.environment.set(\"GitHub_User\",\"\");",
							"pm.environment.set(\"GitHub_Pwd\",\"\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{BEARERTOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "X-GitHub-OTP",
						"value": "{{OTP}}",
						"type": "text",
						"disabled": true
					},
					{
						"key": "Accept",
						"value": "application/vnd.github.nebula-preview+json",
						"type": "text"
					}
				],
				"url": {
					"raw": "https://api.github.com/users/:username/repos",
					"protocol": "https",
					"host": [
						"api",
						"github",
						"com"
					],
					"path": [
						"users",
						":username",
						"repos"
					],
					"variable": [
						{
							"key": "username",
							"value": "{{GitHub_User}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create a Git Repository",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "437b985a-092d-4c06-8aa4-7bb8b1f02849",
						"exec": [
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "851e2eb8-9081-4ce4-b661-bc2d89f8e705",
						"exec": [
							"pm.test(\"The expected status code is 201\", function () {",
							"    pm.response.to.have.status(201,'status 201 when a repository is created');",
							"});",
							"",
							"postman.setNextRequest(\"Retrieve the newly created  repository\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{BEARERTOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "X-GitHub-OTP",
						"value": "{{OTP}}",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/vnd.github.v3+json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"name\": \"Test repository\",\r\n  \"description\": \"This is a test repository created by Postman\",\r\n  \"homepage\": \"https://github.com\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://api.github.com/user/repos",
					"protocol": "https",
					"host": [
						"api",
						"github",
						"com"
					],
					"path": [
						"user",
						"repos"
					]
				}
			},
			"response": []
		},
		{
			"name": "Retrieve the newly created  repository",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "6f61e606-c39a-42e4-bfc6-945bc66c1fce",
						"exec": [
							"pm.environment.set(\"owner\", \"AymarN\");",
							"pm.environment.set(\"repo\", \"Test-repository\");"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "4cfe6a1f-7771-447d-b191-a8c45b51b069",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200,'status 200 while retrieving an existing repo');",
							"});",
							"",
							"postman.setNextRequest(\"Create an issue\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{BEARERTOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "X-GitHub-OTP",
						"value": "{{OTP}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "https://api.github.com/repos/:owner/:repo",
					"protocol": "https",
					"host": [
						"api",
						"github",
						"com"
					],
					"path": [
						"repos",
						":owner",
						":repo"
					],
					"variable": [
						{
							"key": "owner",
							"value": "{{owner}}"
						},
						{
							"key": "repo",
							"value": "{{repo}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create an issue",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "02ab9e54-3b50-43bc-a34d-3f6d95e160c0",
						"exec": [
							"var jsonData = pm.response.json();",
							"var number = jsonData.number;",
							"pm.environment.set(\"number\",jsonData.number);",
							"pm.test(\"Expected code status 201\", function () {",
							"    pm.response.to.have.status(201,'status 201 when an issue is created');",
							"});",
							"",
							"postman.setNextRequest(\"Retrieve the new issue created\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{BEARERTOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "X-GitHub-OTP",
						"value": "{{OTP}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"title\": \"Found a Bug\",\r\n  \"body\": \"This issue has been automatically created by Postman\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://api.github.com/repos/:owner/:repo/issues",
					"protocol": "https",
					"host": [
						"api",
						"github",
						"com"
					],
					"path": [
						"repos",
						":owner",
						":repo",
						"issues"
					],
					"variable": [
						{
							"key": "owner",
							"value": "{{owner}}"
						},
						{
							"key": "repo",
							"value": "{{repo}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Retrieve the new issue created",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "5417fa6b-f5a0-4885-8501-3c8cd9a65139",
						"exec": [
							"var jsonData = pm.response.json();",
							"var bug_title = jsonData.title;",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200,'status 200 while retrieving existing issue');",
							"});",
							"",
							"pm.test(\"Check the issue title\", function () {",
							"    pm.expect(bug_title).to.eql('Found a Bug');",
							"});",
							"",
							"postman.setNextRequest(\"Clean-up\");",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{BEARERTOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "X-GitHub-OTP",
						"value": "{{OTP}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {}
					}
				},
				"url": {
					"raw": "https://api.github.com/repos/:owner/:repo/issues/:issue_number",
					"protocol": "https",
					"host": [
						"api",
						"github",
						"com"
					],
					"path": [
						"repos",
						":owner",
						":repo",
						"issues",
						":issue_number"
					],
					"variable": [
						{
							"key": "owner",
							"value": "{{owner}}"
						},
						{
							"key": "repo",
							"value": "{{repo}}"
						},
						{
							"key": "issue_number",
							"value": "{{number}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Clean-up",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "da6ba667-36e7-4558-b9c4-9f6a715d7e0d",
						"exec": [
							"pm.test(\"Status code is 204\", function () {",
							"    pm.response.to.have.status(204,'must 204 while cleaning the repo');",
							"});",
							"",
							"postman.setNextRequest(\"Fetch the deleted repository\");",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{BEARERTOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [
					{
						"key": "X-GitHub-OTP",
						"value": "{{OTP}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "https://api.github.com/repos/:owner/:repo",
					"protocol": "https",
					"host": [
						"api",
						"github",
						"com"
					],
					"path": [
						"repos",
						":owner",
						":repo"
					],
					"variable": [
						{
							"key": "owner",
							"value": "{{owner}}"
						},
						{
							"key": "repo",
							"value": "{{repo}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Fetch the deleted repository",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "610672bb-3298-4efc-a7a8-abba938b51d7",
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404,'status must be 404 while fetching');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{BEARERTOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "X-GitHub-OTP",
						"value": "{{OTP}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "https://api.github.com/repos/:owner/:repo",
					"protocol": "https",
					"host": [
						"api",
						"github",
						"com"
					],
					"path": [
						"repos",
						":owner",
						":repo"
					],
					"variable": [
						{
							"key": "owner",
							"value": "{{owner}}"
						},
						{
							"key": "repo",
							"value": "{{repo}}"
						}
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "614cef3a-1e30-4e09-9a34-f74ae0230b0a",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "d04c5e1e-576a-4241-a625-30053a4c7194",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"protocolProfileBehavior": {}
}